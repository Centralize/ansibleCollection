---
- name: Deploy Nginx with PHP 8.3 and SQLite3 on Ubuntu 24.04 LTS (Single File Playbook)
  hosts: all # Or a specific group like 'webservers' from your inventory
  become: yes # Important to run tasks with root privileges

  vars:
    # Define the exact PHP 8 version available in Ubuntu 24.04 LTS
    php_version: "8.3"

  tasks:
    - name: Ensure APT cache is updated and common packages are present
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Nginx from Ubuntu repositories
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: yes
      notify: Restart Nginx
      when: ansible_os_family == "Debian"

    - name: Ensure Nginx is running and enabled at boot
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"

    - name: Install PHP {{ php_version }} and PHP-FPM with common extensions and SQLite3 from Ubuntu repositories
      ansible.builtin.apt:
        name:
          - "php{{ php_version }}-fpm"
          - "php{{ php_version }}-sqlite3" # This provides SQLite3 support
          - "php{{ php_version }}-cli"
          - "php{{ php_version }}-common"
          - "php{{ php_version }}-mysql" # Common for many applications, good to include
          - "php{{ php_version }}-curl"
          - "php{{ php_version }}-mbstring"
          - "php{{ php_version }}-xml"
          - "php{{ php_version }}-zip"
          - "php{{ php_version }}-ssh2"
          - "sqlite3"
        state: present
        update_cache: yes
      notify: Restart PHP-FPM
      when: ansible_os_family == "Debian"

    - name: Ensure PHP-FPM is running and enabled at boot
      ansible.builtin.systemd:
        name: "php{{ php_version }}-fpm"
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"

    - name: Copy Nginx global configuration file (nginx.conf)
      ansible.builtin.copy:
        content: |
          user www-data;
          worker_processes auto;
          pid /run/nginx.pid;
          include /etc/nginx/modules-enabled/*.conf;

          events {
              worker_connections 768;
              # multi_accept on;
          }

          http {

              ##
              # Basic Settings
              ##

              sendfile on;
              tcp_nopush on;
              types_hash_max_size 2048;
              # server_tokens off;

              # server_names_hash_bucket_size 64;
              # client_header_buffer_size 16k;
              # large_client_header_buffers 4 16k;

              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              ##
              # SSL Settings
              ##

              ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
              ssl_prefer_server_ciphers on;

              ##
              # Logging Settings
              ##

              access_log /var/log/nginx/access.log;
              error_log /var/log/nginx/error.log;

              ##
              # Gzip Settings
              ##

              gzip on;
              gzip_vary on;
              gzip_proxied any;
              gzip_comp_level 6;
              gzip_buffers 16 8k;
              gzip_http_version 1.1;
              gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

              ##
              # Virtual Host Configs
              ##

              include /etc/nginx/conf.d/*.conf;
              include /etc/nginx/sites-enabled/*;
          }
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart Nginx

    - name: Remove default Nginx site configuration
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Restart Nginx

    - name: Create Nginx sites-available directory if it doesn't exist
      ansible.builtin.file:
        path: /etc/nginx/sites-available
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create Nginx sites-enabled directory if it doesn't exist
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy Nginx default server block configuration
      ansible.builtin.copy:
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.php index.html index.htm index.nginx-debian.html;

              server_name _; # Use underscore for a default catch-all server if no domain is specified or a single site

              location / {
                  try_files $uri $uri/ =404;
              }

              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/run/php/php{{ php_version }}-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }

              # Deny access to .htaccess files, if Apache's document root
              # concurs with nginx's one
              location ~ /\.ht {
                  deny all;
              }

              # Add expires headers for static files
              location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
                  expires 30d;
                  log_not_found off;
              }
          }
        dest: /etc/nginx/sites-available/default_server.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart Nginx

    - name: Enable default Nginx server block
      ansible.builtin.file:
        src: /etc/nginx/sites-available/default_server.conf
        dest: /etc/nginx/sites-enabled/default_server.conf
        state: link
        owner: root
        group: root
        mode: '0755'
      notify: Restart Nginx

    - name: Create web root directory
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy phpinfo.php to web root for testing
      ansible.builtin.copy:
        content: |
          <?php
          // phpinfo.php - Basic PHP information page for testing installation
          phpinfo();
          ?>
        dest: /var/www/html/phpinfo.php
        owner: www-data
        group: www-data
        mode: '0644'

  handlers:
    - name: Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Restart PHP-FPM
      ansible.builtin.systemd:
        name: "php{{ php_version }}-fpm"
        state: restarted
